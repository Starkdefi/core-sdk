name: NPM Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to NPM
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Check if version changed
        id: version-check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Get the latest published version from npm
          LATEST_VERSION=$(npm view starkdefi/core-sdk version 2>/dev/null || echo "0.0.0")
          echo "Latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          
          # Check if version has changed compared to latest published version
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $LATEST_VERSION to $CURRENT_VERSION"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION (same as latest published)"
          fi

      - name: Install dependencies
        if: steps.version-check.outputs.version_changed == 'true'
        run: yarn install --frozen-lockfile

      - name: Run tests
        if: steps.version-check.outputs.version_changed == 'true'
        run: yarn test

      - name: Build package
        if: steps.version-check.outputs.version_changed == 'true'
        run: yarn build

      - name: Verify build output
        if: steps.version-check.outputs.version_changed == 'true'
        run: |
          # Check if dist directory exists and has files
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found"
            exit 1
          fi
          
          # Check for required files
          if [ ! -f "dist/index.js" ] || [ ! -f "dist/index.d.ts" ]; then
            echo "Error: Required build files not found"
            exit 1
          fi
          
          echo "Build verification passed"

      - name: Publish to NPM
        if: steps.version-check.outputs.version_changed == 'true'
        run: |
          # Verify we're on main branch
          if [ "${{ github.ref }}" != "refs/heads/main" ]; then
            echo "Error: Can only deploy from main branch"
            exit 1
          fi
          
          # Verify NPM_TOKEN is set
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "Error: NPM_TOKEN secret is not set"
            exit 1
          fi
          
          # Publish to npm
          yarn publish --access public --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current_version }}
          release_name: Release v${{ steps.version-check.outputs.current_version }}
          body: |
            ## What's Changed
            
            This release updates the StarkDefi Core SDK to version ${{ steps.version-check.outputs.current_version }}.
            
            ### Installation
            
            ```bash
            npm install @starkdefi/core-sdk@${{ steps.version-check.outputs.current_version }}
            ```
            
            ### Changes
            
            See the [commit history](https://github.com/Starkdefi/core-sdk/commits/main) for detailed changes.
          draft: false
          prerelease: false 